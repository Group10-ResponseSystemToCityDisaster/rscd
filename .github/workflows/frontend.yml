name: Frontend CI/CD

on:
  push:
    branches: [ "main", "front-dev" ]
  pull_request:
    branches: [ "main" ]

env:
  VUE_APP_GOOGLE_MAP_API: ${{ secrets.VUE_APP_GOOGLE_MAP_API }}
  VUE_APP_BACKEND_URL: ${{ secrets.VUE_APP_BACKEND_URL }}

jobs:
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

  test:
    needs: setup
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Restore dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Run cypress tests
      uses: cypress-io/github-action@v6
      with:
        working-directory: frontend
        browser: chrome
        record: true
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        COMMIT_INFO_SHA: ${{github.event.pull_request.head.sha}}
        COMMIT_INFO_MESSAGE: ${{github.event.pull_request.title}}


  build:
    needs: [setup, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Restore dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build
      run: |
        cd frontend
        npm run build --if-present

    - name: Upload dist directory
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: frontend/dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Download dist directory
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: frontend/dist/

    - name: Deploy to Production server
      uses: easingthemes/ssh-deploy@v4.1.10
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "frontend/dist/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}
        EXCLUDE: "/node_modules/"
        SCRIPT_BEFORE: |
          whoami
          ls -al
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT
