name: Frontend CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  VUE_APP_GOOGLE_MAP_API: ${{ secrets.VUE_APP_GOOGLE_MAP_API }}
  VUE_APP_BACKEND_URL: ${{ secrets.VUE_APP_BACKEND_URL }}

jobs:
  install_dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache dependencies
      id: cache-check
      uses: actions/cache@v3.3.2
      with:
        path: frontend/node_modules
        key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    - name: Save cache
      if: steps.cache-check.outputs.cache-hit != 'true'
      uses: actions/cache@v3.3.2
      with:
        path: frontend/node_modules
        key: npm-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}

  build:
    needs: install_dependencies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Build
      run: |
        cd frontend
        npm run build --if-present
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3.1.3
      with:
        name: frontend-build
        path: frontend/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Download Build Artifact
      uses: actions/download-artifact@v3.0.2
      with:
        name: frontend-build
        path: frontend-build
    - name: Deploy to Production server
      uses: easingthemes/ssh-deploy@v4.1.10
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "frontend-build/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.REMOTE_TARGET }}
        EXCLUDE: "/node_modules/"
        SCRIPT_BEFORE: |
          whoami
          ls -al
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT
