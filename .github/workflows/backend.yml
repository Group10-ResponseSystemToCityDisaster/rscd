name: Backend CI/CD

on:
  push:
    branches: [ "main", "back-dev" ]
  pull_request:
    branches: [ "main" ]

env:
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
  DJANGO_DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
  DJANGO_DB_USER: ${{ secrets.DJANGO_DB_USER }}
  DJANGO_DB_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
  DJANGO_DB_HOST: ${{ secrets.DJANGO_DB_HOST }}
  DJANGO_DB_PORT: ${{ secrets.DJANGO_DB_PORT }}
  DJANGO_GITHUB_CLIENT_ID: ${{ secrets.DJANGO_GITHUB_CLIENT_ID }}
  DJANGO_GITHUB_CLIENT_SECRET: ${{ secrets.DJANGO_GITHUB_CLIENT_SECRET }}
  DJANGO_GITHUB_REDIRECT_URI: ${{ secrets.DJANGO_GITHUB_REDIRECT_URI }}
  DJANGO_FRONT_END_URL: ${{ secrets.DJANGO_FRONT_END_URL }}
  DJANGO_ENV: ${{ secrets.DJANGO_ENV }}

jobs:
  setup-backend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python3.9 -m pip install --upgrade pip
        pip3.9 install -r requirements.txt
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

  test-backend:
    needs: setup-backend
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Restore dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Missed Dependencies
      run: |
        python3.9 -m pip install --upgrade pip
        pip3.9 install -r requirements.txt
    - name: Run Tests
      run: |
        cd backend
        python3.9 manage.py test
  
  staging-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request' && github.base_ref == 'main') || (github.event_name == 'push' && github.ref == 'refs/heads/back-dev')

    steps:
    - uses: actions/checkout@v4
    - name: Deploy to Sataging server
      uses: easingthemes/ssh-deploy@v4.1.10
      with:
        SSH_PRIVATE_KEY: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: ""
        REMOTE_HOST: ${{ secrets.STAGING_REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.STAGING_REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.STAGING_REMOTE_USER }}
        TARGET: ${{ secrets.STAGING_BACKEND_REMOTE_TARGET }}
        SCRIPT_BEFORE: |
          whoami
          ls -al
          sudo chown -R ${{ secrets.STAGING_REMOTE_USER }}:${{ secrets.STAGING_REMOTE_USER }} ${{ secrets.STAGING_BACKEND_REMOTE_TARGET }}
          sudo chmod -R 775 ${{ secrets.STAGING_BACKEND_REMOTE_TARGET }}
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT
          cd ${{ secrets.STAGING_BACKEND_REMOTE_TARGET }}
          pip install -r requirements.txt
          cd backend
          python3.9 manage.py makemigrations
          python3.9 manage.py migrate
          sudo lsof -i :18351
          tmux kill-window -t rscdstaging
          sudo lsof -i :18351
          tmux new -d -n rscdstaging 'python3.9 manage.py runserver 0.0.0.0:18351'
          sudo lsof -i :18351


  deploy-backend:
    needs: test-backend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    - name: Deploy to Production server
      uses: easingthemes/ssh-deploy@v4.1.10
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "backend/"
        REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
        REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
        REMOTE_USER: ${{ secrets.REMOTE_USER }}
        TARGET: ${{ secrets.BACKEND_REMOTE_TARGET }}
        SCRIPT_BEFORE: |
          whoami
          ls -al
          sudo chown -R ${{ secrets.REMOTE_USER }}:${{ secrets.REMOTE_USER }} ${{ secrets.BACKEND_REMOTE_TARGET }}
          sudo chmod -R 775 ${{ secrets.BACKEND_REMOTE_TARGET }}
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT
          cd ${{ secrets.BACKEND_REMOTE_TARGET }}
          cd ..
          pip3.9 install -r requirements.txt
          cd backend
          python3.9 manage.py makemigrations
          python3.9 manage.py migrate
          sudo systemctl restart uwsgi.service
